import dayjs from "dayjs";
import Head from "next/head";
import { useRouter } from "next/router";
import React, { useState, useEffect } from "react";
import getFormattedDiffs from "../lib/dateManipulation";

// Datepicker
import DatePicker from "react-datepicker";
import "react-datepicker/dist/react-datepicker.css";

// Day.js customizations
import relativeTime from "dayjs/plugin/relativeTime";
dayjs.extend(relativeTime);

export default function Home() {
  const [date, setDate] = useState<Date>(new Date("Dec 24 2021"));
  const [eventName, setName] = useState<string>("Christmas 2021");
  const [editingTitle, setEditingTitle] = useState<boolean>(false);

  const parsed = dayjs(date);
  const [today, setToday] = useState(dayjs());

  const { query }: any = useRouter();

  useEffect(() => {
    if (parsed.isAfter(today)) {
      const countDown = setInterval(() => {
        setToday(dayjs());
      }, 250);

      return () => {
        clearInterval(countDown);
      };
    }
  });

  useEffect(() => {
    if (query.name && query.date) {
      setName(decodeURIComponent(query.name));
      setDate(new Date(parseInt(query.date) * 1000));
    }
  }, [query]);

  const addQueryParam = (key: string, value: string) => {
    const url = new URL(window.location.href);
    url.searchParams.set(key, value);
    window.history.pushState({}, "", url.toString());
  };

  useEffect(() => {
    addQueryParam("date", (date.getTime() / 1000).toString());
    addQueryParam("name", encodeURIComponent(eventName));
  }, [date, eventName]);

  const diffParams = getFormattedDiffs(today, parsed);

  return (
    <div className="flex flex-col items-center justify-between h-screen">
      <Head>
        <title>CountDowner</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <header>
        <nav className="w-screen text-xm gap-10 bg-[#262A2B] text-white py-4 cursor-pointer">
          <span>Create countdown</span>
          <a
            href="https://github.com/filiptronicek/CountDowner"
            target="_blank"
            rel="noreferrer noopener"
          >
            Source code
          </a>
        </nav>
      </header>

      <main className="text-center">
        <div>
          {editingTitle ? (
            <input
              className="text-7xl text-center"
              value={eventName}
              onChange={(e) => {
                setName(e.target.value);
              }}
              onBlur={() => {
                setEditingTitle(false);
              }}
              autoFocus
            />
          ) : (
            <div
              className="text-7xl"
              onClick={() => {
                setEditingTitle(true);
              }}
            >
              {eventName}
            </div>
          )}
          <div className="text-3xl flex justify-center items-center">
            Counting down to{" "}
            <DatePicker
              dateFormat="dd/MM/yyyy"
              selected={date}
              showTimeSelect
              timeIntervals={15}
              minDate={new Date()}
              onChange={(val: Date) => setDate(val)}
            />
          </div>
          {parsed.isAfter(today) ? (
            <div id="countdown-area" className="mt-5 text-4xl">
              {diffParams}
            </div>
          ) : (
            <div className="mt-5 text-4xl">
              This countdown has passed {today.to(parsed)}
            </div>
          )}
        </div>
      </main>

      <footer>By @filiptronicek with ðŸ’–</footer>
    </div>
  );
}
